// .active,
// [data-state="is-visible"] {
//     @include mq($medium) {
//         @include translateX(0);
//         @include scale(1);
//         opacity: 1;
//         z-index: $zIndex--isVisible;;
//     }
// }

.is-scrubbing {
    .progress-playhead {
        opacity: 1;
    }

    .times-label,
    .box-label {
        opacity: 1;
    }

    .times-label--fadein:after,
    .box-label--fadein:after {
        opacity: 1 !important;
    }
}

.btn--toggle[data-state="is-player"] {
    > :nth-child(1) {
        @extend [data-state="is-visible"];
    }
    > :nth-child(2) {
        @extend [data-state="is-shrunk"];
    }
}

.btn--toggle[data-state="is-share"] {
    > :nth-child(1) {
        @extend [data-state="is-shrunk"];
    }
    > :nth-child(2) {
        @extend [data-state="is-visible"];
    }
}

.btn--toggle[data-state="is-paused"] {
    > :nth-child(1) {
        @extend [data-state="is-visible"];
    }
    > :nth-child(2) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
    > :nth-child(3) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
}

.btn--toggle[data-state="is-playing"] {
    > :nth-child(1) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
    > :nth-child(2) {
        @extend [data-state="is-visible"];
    }
    > :nth-child(3) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
}

.btn--toggle[data-state="is-loading"] {
    > :nth-child(1) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
    > :nth-child(2) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
    > :nth-child(3) {
        @extend [data-state="is-visible"];
    }
}

// gotta refactor out all IDs
.is-collapsed {

  #leaderboard {
    margin-bottom: 0;
    max-height: 0;
  }

  + .marquee {
    margin-top: -1.5rem;

     @include mq($small-only) {
        margin-top: 0;
      }
  }
}

[data-state="is-valid"] {
    .input-state-valid {
        opacity: 1;
    }
}

[data-state="is-invalid"] {
    .input-state-invalid {
        opacity: 1;
    }

    .input {
        background-color: $darkred;
    }
}

[data-state="is-right"] {
    @include translateX(100%);
    z-index: $zIndex--isRight;
}

[data-state="is-up"] {
    @include translateY(-100%);
    z-index: $zIndex--isUp;
}

[data-state="is-shrunk"] {
    @include scale(0);
    z-index: $zIndex--isShrunk;
}

[data-state="is-fadeout"] {
    opacity: 0;
}

[data-state="is-visible"] {
    @include translateX(0);
    @include scale(1);
    opacity: 1;
    z-index: $zIndex--isVisible;
}

// Safari doesn't like using attribute selectors for transitioning clip-path, for
// some reason. so we're using a class instead
.figure-caption-body.is-open {
    -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    opacity: 1;
}

.figure-caption-body {
    -webkit-clip-path: polygon(100% 100%, 100% 80%, 100% 100%, 100% 100%);
    clip-path: polygon(100% 100%, 100% 80%, 100% 100%, 100% 100%);
    opacity: 0;
}

.btn--toggle[data-state="first"] {
    > :nth-child(1) {
        @extend [data-state="is-visible"];
    }
    > :nth-child(2) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
    > :nth-child(3) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
}

.btn--toggle[data-state="second"] {
    > :nth-child(1) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
    > :nth-child(2) {
        @extend [data-state="is-visible"];
    }
    > :nth-child(3) {
        @extend [data-state="is-shrunk"];
        opacity: 0;
    }
}

#main,
#series,
#related {
    img {
        opacity: 0;
        @include transition(opacity $transition-timing ease);

        &.is-loaded {
            opacity: 1;
        }
    }
}

/* Persistent Player & related components */

//.persistent-player { // default state: paused
//    .persistent-playbutton {
//      > .icon {
//          position: absolute;
//          @include mq($wide) {
//            top: 13px;
//          }
//          left: 0;
//          right: 0;
//          margin: auto;
//          transition: fill 0.2s ease-in-out, opacity 0.3s ease-in-out;
//      }
//      > .persistent-playbutton--play {
//          opacity: 1;
//      }
//      > .persistent-playbutton--pause {
//          opacity: 0;
//      }
//      > .persistent-playbutton--spinner {
//          opacity: 0;
//      }
//    }
//}
//
//.persistent-playbutton[data-state="is-playing"] {
//    > .persistent-playbutton--spinner {
//        opacity: 0;
//    }
//    > .persistent-playbutton--play {
//        opacity: 0;
//    }
//    > .persistent-playbutton--pause {
//        opacity: 1;
//    }
//}
//
//.persistent-playbutton[data-state="is-loading"] {
//    > .persistent-playbutton--play {
//        opacity: 0;
//    }
//    > .persistent-playbutton--pause {
//        opacity: 0;
//    }
//    > .persistent-playbutton--spinner {
//        opacity: 1;
//    }
//}
//
.persistent-queuebutton {
    > .icon {
      transition: fill 0.2s ease-in-out, opacity 0.3s ease-in-out;
    }
    > .persistent-queueicon--closequeue {
      opacity: 0;
    }
}

.is-open-modal .persistent-queuebutton {
    > .persistent-queueicon--openqueue {
      opacity: 0;
    }
    > .persistent-queueicon--closequeue {
      opacity: 1;
    }
}

.is-open-modal {
  overflow: hidden;
}

// ManagedItem Publish Statuses
[data-status="draft"]:before,
[data-status="submitted"]:before {
    content: "Current Status: DRAFT";
}

[data-status="withdrawn"]:before {
    content: "Current Status: WITHDRAWN";
}

[data-status="scheduled"]:before {
    content: "Current Status: SCHEDULED for publishing on " attr(data-date);
}

[data-status="published"]:before {
    content: "Current Status: WILL PUBLISH at " attr(data-date);
}

[data-status]:before {
    display: block;
    background-color: $lightgreen;
    padding: 8px 15px;
    color: black;
    @include fontsize(14);
}

[data-status=""]:before {
    display: none;
}
